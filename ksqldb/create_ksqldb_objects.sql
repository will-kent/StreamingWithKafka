SET 'auto.offset.reset' = 'earliest';

CREATE STREAM COMMENTS
(
  ID VARCHAR KEY,
  SUBREDDIT_ID VARCHAR,
  BODY VARCHAR,
  LINK_ID VARCHAR,
  LINK_TITLE VARCHAR,
  NAME VARCHAR,
  PERMALINK VARCHAR,
  LINK_PERMALINK VARCHAR,
  LINK_AUTHOR VARCHAR,
  LINK_URL VARCHAR,
  IS_SUBMITTER BOOLEAN,
  CREATED DOUBLE,
  UPS DOUBLE
)
WITH(KAFKA_TOPIC='comments', VALUE_FORMAT='JSON')
;SET 'auto.offset.reset' = 'earliest';

CREATE STREAM SUBMISSIONS
(
  ID VARCHAR KEY,
  AUTHOR_FULLNAME VARCHAR,
  TITLE VARCHAR,
  SUBREDDIT_NAME_PREFIXED VARCHAR,
  NAME VARCHAR,
  UPVOTE_RATIO DOUBLE,
  UPS INTEGER,
  SCORE INTEGER,
  AUTHOR_PREMIUM BOOLEAN,
  CREATED DOUBLE,
  DOMAIN VARCHAR,
  URL_OVERRIDDEN_BY_DEST VARCHAR,
  OVER_18 BOOLEAN,
  SUBREDDIT_ID VARCHAR,
  PERMALINK VARCHAR,
  PARENT_WHITELIST_STATUS VARCHAR,
  URL VARCHAR,
  CREATED_UTC DOUBLE
)
WITH(KAFKA_TOPIC='submissions', VALUE_FORMAT='JSON')
;SET 'auto.offset.reset' = 'earliest';

CREATE STREAM BBC_SUBMISSIONS WITH (kafka_topic = 'submissions') AS
SELECT ID
	,AUTHOR_FULLNAME
    ,TITLE
    ,SUBREDDIT_NAME_PREFIXED
    ,NAME
    ,AUTHOR_PREMIUM
    ,TIMESTAMPTOSTRING(CAST(CREATED AS BIGINT) * 1000, 'yyyy-MM-dd HH:mm:ss') AS CREATED_LOCAL_DATETIME
    ,URL_OVERRIDDEN_BY_DEST
    ,OVER_18
    ,SUBREDDIT_ID
    ,PERMALINK
    ,PARENT_WHITELIST_STATUS
    ,URL
    ,UPVOTE_RATIO
    ,UPS
    ,SCORE
FROM SUBMISSIONS
WHERE domain = 'bbc.co.uk'
EMIT CHANGES;SET 'auto.offset.reset' = 'earliest';

CREATE STREAM SUBMITTER_COMMENTS AS
SELECT *
FROM COMMENTS
WHERE IS_SUBMITTER
EMIT CHANGES;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_COMMENTS
(
  ID VARCHAR PRIMARY KEY,
  SUBREDDIT_ID VARCHAR,
  BODY VARCHAR,
  LINK_ID VARCHAR,
  LINK_TITLE VARCHAR,
  NAME VARCHAR,
  PERMALINK VARCHAR,
  LINK_PERMALINK VARCHAR,
  LINK_AUTHOR VARCHAR,
  LINK_URL VARCHAR,
  IS_SUBMITTER BOOLEAN,
  CREATED DOUBLE,
  UPS DOUBLE
)
WITH(KAFKA_TOPIC='comments',VALUE_FORMAT='JSON')
;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_SUBMISSIONS
(
  ID VARCHAR PRIMARY KEY,
  AUTHOR_FULLNAME VARCHAR,
  TITLE VARCHAR,
  SUBREDDIT_NAME_PREFIXED VARCHAR,
  NAME VARCHAR,
  UPVOTE_RATIO DOUBLE,
  UPS INTEGER,
  SCORE INTEGER,
  AUTHOR_PREMIUM BOOLEAN,
  CREATED DOUBLE,
  DOMAIN VARCHAR,
  URL_OVERRIDDEN_BY_DEST VARCHAR,
  OVER_18 BOOLEAN,
  SUBREDDIT_ID VARCHAR,
  PERMALINK VARCHAR,
  PARENT_WHITELIST_STATUS VARCHAR,
  URL VARCHAR,
  CREATED_UTC DOUBLE
)
WITH(KAFKA_TOPIC='submissions', VALUE_FORMAT='JSON')
;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_COMMENT_COUNTS
AS
SELECT SUBSTRING(LINK_ID,4,100) AS LINK_ID
	,COUNT(*) AS TOTAL_COMMENTS
FROM  COMMENTS
GROUP BY SUBSTRING(LINK_ID,4,100)
EMIT CHANGES
;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_SUBMISSION_COMMENTS AS
SELECT s.ID
	,s.AUTHOR_FULLNAME
    ,s.TITLE
    ,s.SUBREDDIT_NAME_PREFIXED
    ,s.NAME
    ,s.AUTHOR_PREMIUM
    ,TIMESTAMPTOSTRING(CAST(s.CREATED AS BIGINT) * 1000, 'yyyy-MM-dd HH:mm:ss') AS CREATED_LOCAL_DATETIME
    ,s.URL_OVERRIDDEN_BY_DEST
    ,s.OVER_18
    ,s.SUBREDDIT_ID
    ,s.PERMALINK
    ,s.PARENT_WHITELIST_STATUS
    ,s.URL
    ,s.UPVOTE_RATIO
    ,s.UPS
    ,s.SCORE
    ,c.TOTAL_COMMENTS
FROM  T_SUBMISSIONS s
	JOIN T_COMMENT_COUNTS  c
       ON s.ID = c.LINK_ID
EMIT CHANGES
;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_SUBMISSION_AUTHOR_COMMENTS
AS
SELECT LINK_AUTHOR
	,COUNT(*) AS TOTAL_COMMENTS
FROM  COMMENTS
WINDOW TUMBLING(SIZE 24 HOUR)
GROUP BY LINK_AUTHOR
EMIT CHANGES
;SET 'auto.offset.reset' = 'earliest';

CREATE TABLE T_AUTHOR_AVERAGE_SUBMISSION_SCORE
AS
SELECT AUTHOR_FULLNAME AS KEY1
	,AS_VALUE(AUTHOR_FULLNAME) AS AUTHOR_FULLNAME
	,AVG(SCORE) AS AVG_AUTHOR_SCORE
FROM  SUBMISSIONS
WINDOW TUMBLING(SIZE 5 MINUTE)
GROUP BY AUTHOR_FULLNAME
HAVING COUNT(AUTHOR_FULLNAME) = 1
EMIT CHANGES
;